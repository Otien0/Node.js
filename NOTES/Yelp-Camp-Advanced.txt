1. Add a seeds.js file
2. Display comments on Campground Show Page.
3. Add nested routes.
4. Add the comment new and create routes;

	NEW::    campgrounds:id/comments/new   >> GET Request
	CREATE:: campgrounds:id/comments   >> POST Request

5. Refactor the templates by creatting new folders > views/campgrounds $$ views/comments.

6. Add the new comment form.
7. Add sidebar to showpage with some great styling on the comments.

Version 4::
ADD AUTHENTICATION TO YELPCAMP:
Links :
	https://www.section.io/engineering-education/how-to-build-authentication-api-with-jwt-token-in-nodejs/
	https://www.codementor.io/@manashkumarchakrobortty/authentication-and-authorization-in-node-js-19brdvhsyw
	https://medium.com/quick-code/handling-authentication-and-authorization-with-node-7f9548fedde8
	https://www.topcoder.com/thrive/articles/authentication-and-authorization-in-express-js-api-using-jwt
	https://auth0.com/blog/create-a-simple-and-secure-node-express-app/


>> packages to install:
	npm install express mongoose ejs body-parser --save
	npm install passport passport-local --save
	npm install passport-local-mongoose --save
	npm install express-session --save

8. >> Create user model and configure passport for authentication
	create user.js file under models[dir] for user configuration
	add register routes and form for authentication.
	add login routes and form for authentication.
	add logout route and "isLoggedIn" Middleware to display some pages when user is-Logged-in.
	show/hide auth links in Navbar correctly. // using "req.user" inbuilt function.

9. Version 5::
	Refactor the RESTFUL ROUTES in YelpCamp::
	mkdir routes >> inside rotes add the templates(campgrounds.js, comments.js, index.js)
	Associate users with comments.
	Add authors names automatically to the comments.
	Prevent unauthenticated users from creating new campgrounds.
	Save username + _id to newly created campgrounds.


10. Editting And Deleting Campgrounds::
	Add Method overide. // npm install method-override --save
	Add Edit Route for campgrounds.
	Add Destroy Route And Delete Button.
	NOTE: + "req.params.id" Means the Campground_id we are editting.

11. Campground Authorization::
	User can only edit his/her campground.
	User can only delete his/her campground.
	Hide/show edit/delete butttons.

12. Editting And Deleting Comments::
	Add Method overide.
	Add Edit Route for comments. // /campgrounds/:id/comments/:comment_id/edit
	Add Destroy Route And Delete Button. // /campgrounds/:id/comments/:comment_id

13. Comment Authorization::
	User can only edit his/her Comment.
	User can only delete his/her Comment.
	Hide/show edit/delete butttons.

14. Refactoring Middleware::
	https://expressjs.com/en/guide/using-middleware.html
	https://github.com/expressjs/morgan

	on top dir> mkdir "middleware"
	Add an index.js file to input all the middlewares.



    Version 6::
15. UI Improvement::
	Uisng Flash messages to display notification alerts.  // https://getbootstrap.com/docs/5.1/components/alerts/
	Add bootstrap alerts to header.
	>>> packages to install:
		npm install express mongoose ejs body-parser --save
		npm install passport passport-local --save
		npm install passport-local-mongoose --save
		npm install express-session --save
		npm install method-override --save
		npm install connect-flash --save
		npm install ejs-mate --save   || https://github.com/JacksonTian/ejs-mate
		npm install joi --save
	
	Links:
		https://www.npmjs.com/package/connect-flash
		https://github.com/jaredhanson/connect-flash
		https://www.tabnine.com/code/javascript/modules/connect-flash
		https://gist.github.com/brianmacarthur/a4e3e0093d368aa8e423

	Using Unsplash API for generating images:
		https://unsplash.com/
		https://unsplash.com/developers

	For the Campgroud, we'll use this collection:
		https://unsplash.com/collections/483251/in-the-woods

16. Errors and Validating Data::
	a) Client-Side Validation:
					https://getbootstrap.com/docs/5.1/forms/validation/

	b) Server-Side Validation:
		Using JOI for Schema and data Validation for Javascript
			https://joi.dev/api/?v=17.6.0

17. Adding the Reviews Model::
	This implicates the One To Many Relationships, same as comments.
	All the steps for implementing comments.

18. YELPCAMP VERSION 7-More Advanced::
	Advancing the Review Route and attaching it to an author.
	Adding the MVC architecture => controllers to refactor the app.
	Restructuring the routers using some express convention, i.e:
										https://expressjs.com/en/4x/api.html#router.route

	==>> "router.route(path)" - Which returns an instance of a single route which you can then use to handle HTTP verbs with optional middleware. 
					    Use router.route() to avoid duplicate route naming and thus typing errors.
	Implement star ratings using a library called Starability. 
	Display a "STAR" Ratings on the review route. using this links:
											https://github.com/LunarLogic/starability

19. Adding Images:
	Here, we are using Cloudinary image upload API:
								https://cloudinary.com/
	
	Using Multer - a node.js middleware for handling multipart/form-data, which is primarily used for uploading files.
		https://github.com/expressjs/multer
		npm i multer --save
		npm install dotenv --save   //To load enviroment variables from a .env file into process.env
		npm install cloudinary
		npm install multer-storage-cloudinary  //A multer storage engine for Cloudinary.

		https://cloudinary.com/documentation/image_transformations

20. Adding Maps:
	Display a map on the show page.
	Implement geocoding and display a map on each campground page using MapBox. 
		https://www.mapbox.com/
	
	Geocoding the user input locations using :  https://docs.mapbox.com/api/search/geocoding/
								
	Here, we are using ; A Node-JS SDK for working with Mapbox APIs. => https://github.com/mapbox/mapbox-sdk-js
				https://github.com/mapbox/mapbox-sdk-js/blob/main/docs/services.md
		npm install @mapbox/mapbox-sdk
	
	To display map on show page, we use: https://docs.mapbox.com/mapbox-gl-js/api/  || https://docs.mapbox.com/mapbox-gl-js/guides/install/

	Adding clustors to our maps =>> https://docs.mapbox.com/mapbox-gl-js/example/cluster/
 
21. Further Styling::
		https://imgix.com/?utm_source=images.unsplash.com&utm_medium=referral&utm_campaign=source-config-details

		


22. DEPLOYMENT::
    a) Heroku:
		https://devcenter.heroku.com/articles/deploying-nodejs
		https://www.positronx.io/deploy-simple-node-js-app-on-heroku-in-minutes/
		https://javascript.plainenglish.io/hosting-node-js-app-on-heroku-in-less-than-5-mins-bc7ce244c8d0








Kenyan Cmping Links::::
https://urbankenyans.com/camping-sites-in-kenya/
https://www.getaway.co.za/travel-ideas/places-to-stay/campsites-in-kenya-camping/
https://www.heleninwonderlust.co.uk/the-best-hostels-guesthouses-campsites-in-kenya/
https://www.booking.com/searchresults.en-gb.html?aid=356980;label=gog235jc-1BCAIY_AModkICa2VIM1gDaHaIAQGYAQm4ARfIAQzYAQHoAQGIAgGoAgO4Av302ZIGwAIB0gIkZmIzMzNmNmItZWExMi00Mjg3LTkyOTYtYjU5NTdlM2Y3ODIy2AIF4AIB;sid=138c02d8ab8f719da7a0a78615376a0b;dest_id=109;dest_type=country;nflt=sth%3D21&

echo "" >.gitignore
		