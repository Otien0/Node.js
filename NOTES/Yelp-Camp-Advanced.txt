1. Add a seeds.js file
2. Display comments on Campground Show Page.
3. Add nested routes.
4. Add the comment new and create routes;

	NEW::    campgrounds:id/comments/new   >> GET Request
	CREATE:: campgrounds:id/comments   >> POST Request

5. Refactor the templates by creatting new folders > views/campgrounds $$ views/comments.

6. Add the new comment form.
7. Add sidebar to showpage with some great styling on the comments.

Version 4::
ADD AUTHENTICATION TO YELPCAMP:
Links :
	https://www.section.io/engineering-education/how-to-build-authentication-api-with-jwt-token-in-nodejs/
	https://www.codementor.io/@manashkumarchakrobortty/authentication-and-authorization-in-node-js-19brdvhsyw
	https://medium.com/quick-code/handling-authentication-and-authorization-with-node-7f9548fedde8
	https://www.topcoder.com/thrive/articles/authentication-and-authorization-in-express-js-api-using-jwt
	https://auth0.com/blog/create-a-simple-and-secure-node-express-app/


>> packages to install:
	npm install express mongoose ejs body-parser --save
	npm install passport passport-local --save
	npm install passport-local-mongoose --save
	npm install express-session --save

8. >> Create user model and configure passport for authentication
	create user.js file under models[dir] for user configuration
	add register routes and form for authentication.
	add login routes and form for authentication.
	add logout route and "isLoggedIn" Middleware to display some pages when user is-Logged-in.
	show/hide auth links in Navbar correctly. // using "req.user" inbuilt function.

9. Version 5::
	Refactor the RESTFUL ROUTES in YelpCamp::
	mkdir routes >> inside rotes add the templates(campgrounds.js, comments.js, index.js)
	Associate users with comments.
	Add authors names automatically to the comments.
	Prevent unauthenticated users from creating new campgrounds.
	Save username + _id to newly created campgrounds.


10. Editting And Deleting Campgrounds::
	Add Method overide. // npm install method-override --save
	Add Edit Route for campgrounds.
	Add Destroy Route And Delete Button.
	NOTE: + "req.params.id" Means the Campground_id we editting.

11. Campground Authorization::
	User can only edit his/her campground.
	User can only delete his/her campground.
	Hide/show edit/delete butttons.

12. Editting And Deleting Comments::
	Add Method overide.
	Add Edit Route for comments. // /campgrounds/:id/comments/:comment_id/edit
	Add Destroy Route And Delete Button. // /campgrounds/:id/comments/:comment_id

13. Comment Authorization::
	User can only edit his/her Comment.
	User can only delete his/her Comment.
	Hide/show edit/delete butttons.

14. Refactoring Middleware::
	on top dir> mkdir "middleware"
	Add an index.js file to input all the middlewares.
	