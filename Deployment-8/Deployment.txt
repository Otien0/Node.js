DEPLOYMENT::

a)     First, create your cluster on mongoDB Atlas  ==>> https://www.mongodb.com/cloud ,
	 again create database access user with password,
	 white-list your ip-address to access your cluster,
	 connect to your cluster using the options provided, || use; 'connect your application',
	 copy the connection string and save it to a file, (".env"), with your password on it.

	 Configure your session using mongo. use package; 'connect-mongo'
		https://www.npmjs.com/package/connect-mongo
			npm i connect-mongo --save

	i.e:
		const dbUrl                 = "mongodb://localhost/yelp_camp";
		const MongoStore            = require('connect-mongo');
		
		const secret = 'thisshouldbeabettersecret!';

		const store = new MongoStore({
    			mongoUrl: dbUrl,
    			secret,
    			touchAfter: 24 * 3600
		});

		store.on("error", (e) => {
    			console.log("SESSION STORE ERROR", e)
		})

		const sessionConfig = {
    			store,
    			name: 'session',
    			secret: 'thisshouldbeabettersecret!',
    			resave: false,
    			saveUninitialized: true,
    			cookie: {
       			 httpOnly: true,
       			 // secure: true,
        			expires: Date.now() + 1000 * 60 * 60 * 24 * 7,
        			maxAge: 1000 * 60 * 60 * 24 * 7
	    			}
		}
	
	 	app.use(session(sessionConfig));


    b) Heroku:
		https://devcenter.heroku.com/articles/deploying-nodejs
		https://www.positronx.io/deploy-simple-node-js-app-on-heroku-in-minutes/
		https://javascript.plainenglish.io/hosting-node-js-app-on-heroku-in-less-than-5-mins-bc7ce244c8d0
		https://dev.to/phyllis_yym/how-to-deploy-a-men-stack-app-from-our-local-machines-to-heroku-3ih1
		
	1) Ensure you have git-bash/cmd installed.

	2) Go to Heroku Account sign up, i.e; 
							https://dashboard.heroku.com/

	3) Download the Heroku Toolbelt - a command line application(CLI) for managing your Heroku account.

	4) The CLI can be downloaded here depending on your OS:
							https://devcenter.heroku.com/articles/heroku-cli

	5) Run heroku login from your project directory through terminal or command prompt and fill in your Heroku credentials.
		The terminal may also direct you to heroku site to login, confirming your account.

	6) Ensure you are into the right directory of your App, then type;

           	git init

	7) Create Heroku Procfile:
		Go to your appâ€™s root and create a file by the name of Procfile and add the following code in it:
				web: node app.js

	8) Add the Script in Package JSON:
		Go to pacakge.json file and the following script in it:
				"scripts": {
    						"start": "node app.js"
						}


          	heroku create "APP_NAME"

        	git add .

        	git commit -m "Initial commit"

        	git push heroku master

        	heroku open    // to view your already deployed app

		heroku run ls // to check the details of the app on heroku cloud.
		heroku run ls node_modules // to check the node modules installed on the app on heroku cloud.

	7) That's it, CONGRATULATIONS, your NodeJs App is now LIVE!!!

c) configure the package.json and add on scripts{...};
			"start": "node app.js"
		




MERN :::
	https://coursework.vschool.io/deploying-mern-app-to-heroku/
	https://www.freecodecamp.org/news/deploying-a-mern-application-using-mongodb-atlas-to-heroku/
	https://dev.to/hawacodes/deploying-a-mern-app-with-heroku-3km7
	https://vivek-kaushal.medium.com/deploying-a-mern-web-app-to-heroku-b12c74c8b3c4
	https://www.techmanyu.com/how-to-deploy-your-mern-stack-application-on-heroku-cc4a8fb8d829
	https://stackoverflow.com/questions/69228146/how-to-deploy-mern-app-to-heroku-with-frontend-inside-of-backend-folder
	https://www.thapatechnical.com/2021/04/how-to-deploy-mern-projects-on-heroku.html


